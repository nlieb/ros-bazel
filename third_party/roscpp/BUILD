licenses(["notice"])  # BSD

load("//bzl:genmsg.bzl", "gencpp_library")

cc_library(
    name = "libros",
    srcs = [
        "include/boost_161_condition_variable.h",
        "include/boost_161_pthread_condition_variable.h",
        "include/boost_161_pthread_condition_variable_fwd.h",
        "src/libros/callback_queue.cpp",
        "src/libros/common.cpp",
        "src/libros/config.h",  # TODO FIXME: configure properly
        "src/libros/connection.cpp",
        "src/libros/connection_manager.cpp",
        "src/libros/file_log.cpp",
        "src/libros/init.cpp",
        "src/libros/internal_timer_manager.cpp",
        "src/libros/intraprocess_publisher_link.cpp",
        "src/libros/intraprocess_subscriber_link.cpp",
        "src/libros/io.cpp",
        "src/libros/master.cpp",
        "src/libros/message_deserializer.cpp",
        "src/libros/names.cpp",
        "src/libros/network.cpp",
        "src/libros/node_handle.cpp",
        "src/libros/param.cpp",
        "src/libros/poll_manager.cpp",
        "src/libros/poll_set.cpp",
        "src/libros/publication.cpp",
        "src/libros/publisher.cpp",
        "src/libros/publisher_link.cpp",
        "src/libros/rosout_appender.cpp",
        "src/libros/service.cpp",
        "src/libros/service_client.cpp",
        "src/libros/service_client_link.cpp",
        "src/libros/service_manager.cpp",
        "src/libros/service_publication.cpp",
        "src/libros/service_server.cpp",
        "src/libros/service_server_link.cpp",
        "src/libros/single_subscriber_publisher.cpp",
        "src/libros/spinner.cpp",
        "src/libros/statistics.cpp",
        "src/libros/steady_timer.cpp",
        "src/libros/subscriber.cpp",
        "src/libros/subscriber_link.cpp",
        "src/libros/subscription.cpp",
        "src/libros/subscription_queue.cpp",
        "src/libros/this_node.cpp",
        "src/libros/timer.cpp",
        "src/libros/topic.cpp",
        "src/libros/topic_manager.cpp",
        "src/libros/transport/transport.cpp",
        "src/libros/transport/transport_tcp.cpp",
        "src/libros/transport/transport_udp.cpp",
        "src/libros/transport_publisher_link.cpp",
        "src/libros/transport_subscriber_link.cpp",
        "src/libros/wall_timer.cpp",
        "src/libros/xmlrpc_manager.cpp",
    ],
    hdrs = [
        "include/ros/advertise_options.h",
        "include/ros/advertise_service_options.h",
        "include/ros/callback_queue.h",
        "include/ros/callback_queue_interface.h",
        "include/ros/common.h",
        "include/ros/connection.h",
        "include/ros/connection_manager.h",
        "include/ros/exceptions.h",
        "include/ros/file_log.h",
        "include/ros/forwards.h",
        "include/ros/init.h",
        "include/ros/internal_timer_manager.h",
        "include/ros/intraprocess_publisher_link.h",
        "include/ros/intraprocess_subscriber_link.h",
        "include/ros/io.h",
        "include/ros/master.h",
        "include/ros/message.h",
        "include/ros/message_deserializer.h",
        "include/ros/names.h",
        "include/ros/network.h",
        "include/ros/node_handle.h",
        "include/ros/param.h",
        "include/ros/parameter_adapter.h",
        "include/ros/poll_manager.h",
        "include/ros/poll_set.h",
        "include/ros/publication.h",
        "include/ros/publisher.h",
        "include/ros/publisher_link.h",
        "include/ros/ros.h",
        "include/ros/rosout_appender.h",
        "include/ros/service.h",
        "include/ros/service_callback_helper.h",
        "include/ros/service_client.h",
        "include/ros/service_client_link.h",
        "include/ros/service_client_options.h",
        "include/ros/service_manager.h",
        "include/ros/service_publication.h",
        "include/ros/service_server.h",
        "include/ros/service_server_link.h",
        "include/ros/single_subscriber_publisher.h",
        "include/ros/spinner.h",
        "include/ros/statistics.h",
        "include/ros/steady_timer.h",
        "include/ros/steady_timer_options.h",
        "include/ros/subscribe_options.h",
        "include/ros/subscriber.h",
        "include/ros/subscriber_link.h",
        "include/ros/subscription.h",
        "include/ros/subscription_callback_helper.h",
        "include/ros/subscription_queue.h",
        "include/ros/this_node.h",
        "include/ros/timer.h",
        "include/ros/timer_manager.h",
        "include/ros/timer_options.h",
        "include/ros/topic.h",
        "include/ros/topic_manager.h",
        "include/ros/transport/transport.h",
        "include/ros/transport/transport_tcp.h",
        "include/ros/transport/transport_udp.h",
        "include/ros/transport_hints.h",
        "include/ros/transport_publisher_link.h",
        "include/ros/transport_subscriber_link.h",
        "include/ros/wall_timer.h",
        "include/ros/wall_timer_options.h",
        "include/ros/xmlrpc_manager.h",
    ],
    strip_include_prefix = "//third_party/roscpp/include",
    visibility = ["//visibility:public"],
    # roslang dep?
    deps = [
        ":EmptySrv",
        ":GetLoggers",
        ":SetLoggerLevel",
        "//third_party/cpp_common",
        "//third_party/rosconsole",
        "//third_party/roscpp_serialization",
        "//third_party/roscpp_traits",
        "//third_party/rosgraph_msgs:Clock",
        "//third_party/rosgraph_msgs:Log",
        "//third_party/rosgraph_msgs:TopicStatistics",
        "//third_party/rostime",
        "//third_party/std_msgs:Header",
        "//third_party/std_msgs:String",
        "//third_party/xmlrpcpp",
        "@boost//:bind",
        "@boost//:chrono",
        "@boost//:config",
        "@boost//:filesystem",
        "@boost//:lexical_cast",
        "@boost//:scope_exit",
        "@boost//:shared_array",
        "@boost//:signals2",
        "@boost//:smart_ptr",
        "@boost//:thread",
        "@boost//:throw_exception",
        "@boost//:type_traits",
        "@boost//:utility",
        "@boost//:version",
    ],
)

cc_library(
    name = "std_msg_deps",
    deps = [
        "//third_party/cpp_common",
        "//third_party/roscpp_serialization",
        "//third_party/roscpp_traits",
    ],
)

gencpp_library(
    name = "cc_logger",
    src = "msg/Logger.msg",
    pkg = "roscpp",
)

gencpp_library(
    name = "cc_get_loggers",
    src = "srv/GetLoggers.srv",
    pkg = "roscpp",
    deps = [":cc_logger"],
)

cc_library(
    name = "GetLoggers",
    hdrs = [":cc_get_loggers"],
    linkstatic = 1,
    strip_include_prefix = "//third_party",
    deps = [":std_msg_deps"],
)

gencpp_library(
    name = "cc_set_logger_level",
    src = "srv/SetLoggerLevel.srv",
    pkg = "roscpp",
)

cc_library(
    name = "SetLoggerLevel",
    hdrs = [":cc_set_logger_level"],
    linkstatic = 1,
    strip_include_prefix = "//third_party",
    deps = [":std_msg_deps"],
)

gencpp_library(
    name = "cc_empty_srv",
    src = "srv/Empty.srv",
    pkg = "roscpp",
)

cc_library(
    name = "EmptySrv",
    hdrs = [":cc_empty_srv"],
    linkstatic = 1,
    strip_include_prefix = "//third_party",
    deps = [":std_msg_deps"],
)
